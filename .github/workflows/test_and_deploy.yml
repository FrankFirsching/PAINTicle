# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Test the add-on
  build_test_and_deploy:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        blender-version: ["2.92", "2.93"]
        os: [ubuntu-latest, windows-latest]
        include:
        - os: ubuntu-latest
          os_tag: Linux
        - os: windows-latest
          os_tag: Windows
        - blender-version: 2.92
          os: windows-latest
          python_executable: 37/bin/python.exe
        - blender-version: 2.93
          os: windows-latest
          python_executable: 39/bin/python.exe
        - blender-version: 2.92
          os: ubuntu-latest
          python_executable: bin/python3.7m
        - blender-version: 2.93
          os: ubuntu-latest
          python_executable: bin/python3.9
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Setup Python 3.9
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      # Install needed python modules
      - name: install python modules
        run: |
          python --version
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip list
      # On Linux install a system blender version to get the needed dependencies
      - name: Set up System Blender for dependencies on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -f -y blender xvfb subversion
      # Download dependencies
      - name: Download blender dependencies
        run: |
          python scripts/download_blender_dependencies.py ${{ matrix.blender-version }}
      # Build the add-on
      - name: Build it
        run: |
          build/dependencies/python/${{matrix.python_executable}} setup.py build --build-lib=build/out/
      # On Linux run with UI
      - name: Test Blender ${{ matrix.blender-version }} with pytest (Linux version)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          python scripts/test_addon.py --cov --rev ${{ matrix.blender-version }}
      # On Windows only run the non-UI tests (hangs otherwise)
      - name: Test Blender ${{ matrix.blender-version }} with pytest (non Linux version)
        if: ${{ ! startsWith(matrix.os, 'ubuntu') }}
        run: |
          python scripts/test_addon.py --cov --rev ${{ matrix.blender-version }}
      # Create the addon's zip
      - name: Package
        run: |
          scripts/deploy.sh -s build/out/painticle -t PAINTicle-${{matrix.os_tag}}-${{matrix.blender-version}}.zip
      # Pull requests store artifacts
      - name: Archive production artifacts
        if: ${{ github.event_name == 'pull_request' || (!startswith(github.ref, 'refs/heads/main') && !startswith(github.ref, 'refs/tags')) }}
        uses: actions/upload-artifact@v2
        with:
          name: built-addon
          path: |
            PAINTicle-${{matrix.os_tag}}-${{matrix.blender-version}}.zip
      # Pushes deploy to development build
      - name: "Development Build release"
        uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ github.event_name == 'push' && startswith(github.ref, 'refs/heads/main') }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            PAINTicle-${{matrix.os_tag}}-${{matrix.blender-version}}.zip
      # Tags deploy to named release
      - name: "Tagged release"
        uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ github.event_name == 'push' && startswith(github.ref, 'refs/tags/') }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            PAINTicle-${{matrix.os_tag}}-${{matrix.blender-version}}.zip
